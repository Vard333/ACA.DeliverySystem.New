@page "/item"
@using ACA.DeliverySystem.UI.Models
@using ACA.DeliverySystem.UI.Services
@inject ItemService ItemService
@inject ISnackbar Snackbar

<PageTitle>Items</PageTitle>

<MudContainer>
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h6">Item List</MudText>
        </MudCardHeader>
        <MudCardContent>
            @if (items == null)
            {
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            }
            
            else
            {
                <MudTable Items="items" Hover="true" Striped="true">
                    <HeaderContent>
                        <MudTh>Name</MudTh>
                        <MudTh>Description</MudTh>
                        <MudTh>Price</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd>@context.Name</MudTd>
                            <MudTd>@context.Description</MudTd>
                            <MudTd>@context.Price.ToString("C")</MudTd>
                        </RowTemplate>
                    </MudTable>
            }
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private IEnumerable<ItemViewModel> items;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            items = await ItemService.GetAll();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading items: {ex.Message}", Severity.Error);
        }
    }
}
